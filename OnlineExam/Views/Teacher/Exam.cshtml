@model OnlineExam.DbContext.Exam
@using OnlineExam.Authentication

@{
    ViewBag.Title = "Exam";
}


<section class="pt-5 bg-section-secondary">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-12">
                <div class="row align-items-center">
                    <div class="col">
                        <span class="surtitle">Teacher account</span>
                        <h1 class="h3 mb-0">Exam Management</h1>
                    </div>
                </div>
                <div class="row align-items-center mt-4">
                    <div class="col">
                        <ul class="nav nav-tabs overflow-x">
                            <li class="nav-item">
                                <a href="~/Teacher/Exams" class="nav-link">Exam List</a>
                            </li>
                            <li class="nav-item">
                                <a href="~/Teacher/Exam" class="nav-link active">Create Exam</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<div class="slice slice-sm bg-section-secondary">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-12">
                <div class="row mt-4">
                    <div class="col-lg-12">
                        <div class="mb-5">
                            @if (ViewBag.StatusMessage != null)
                            {
                                <div class="alert alert-outline-success" role="alert">
                                    <strong>@ViewBag.StatusMessage</strong>
                                </div>
                            }

                            @if (ViewBag.ErrorMessage != null)
                            {
                                <div class="alert alert-outline-danger" role="alert">
                                    <strong>@ViewBag.ErrorMessage</strong>
                                </div>
                            }
                            <div>
                                <h5 class="mb-3">Create Exam</h5>
                                <form id="qsAs" method="post" enctype="multipart/form-data">
                                    @Html.AntiForgeryToken()
                                    @Html.HiddenFor(model => model.Id)

                                    @if (HttpContext.Current.User.Identity.IsAuthenticated)
                                    {
                                        var identity = ((CustomPrincipal)HttpContext.Current.User);
                                        <input type="hidden" id="CuserId" name="CuserId" value="@identity.UserId" />
                                    }

                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label class="form-control-label">Exam Name</label>
                                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Exam Name" } })
                                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "error" })
                                                <label id="Name-error" class="error" for="Name" style="display:none;"></label>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <label class="form-control-label">Class</label>
                                                @Html.DropDownList("ClassID", null, "Select Class", htmlAttributes: new { @class = "custom-select" })
                                                @Html.ValidationMessageFor(model => model.ClassId, "", new { @class = "error" })
                                                <label id="ClassId-error" class="error" for="ClassId" style="display:none;"></label>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <label class="form-control-label">Subject</label>
                                                @Html.DropDownList("SubjectID", null, "Select Subject", htmlAttributes: new { @class = "custom-select" })
                                                @Html.ValidationMessageFor(model => model.SubjectId, "", new { @class = "error" })
                                                <label id="SubjectId-error" class="error" for="SubjectId" style="display:none;"></label>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                <label class="form-control-label">Programme</label>
                                                @Html.DropDownList("ProgramID", null, "Select Programme", htmlAttributes: new { @class = "custom-select" })
                                                @Html.ValidationMessageFor(model => model.PgmId, "", new { @class = "error" })
                                                <label id="PgmId-error" class="error" for="PgmId" style="display:none;"></label>
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                <label class="form-control-label">Course</label>
                                                @Html.DropDownList("CourseID", null, "Select Course", htmlAttributes: new { @class = "custom-select" })
                                                @Html.ValidationMessageFor(model => model.CourseId, "", new { @class = "error" })
                                                <label id="CourseId-error" class="error" for="CourseId" style="display:none;"></label>
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                <label class="form-control-label">Group</label>
                                                @Html.DropDownList("Group", null, "Select Group", htmlAttributes: new { @class = "custom-select" })
                                                @Html.ValidationMessageFor(model => model.ExGroupId, "", new { @class = "error" })
                                                <label id="ExGroupId-error" class="error" for="ExGroupId" style="display:none;"></label>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <label class="form-control-label">From Date</label>
                                                @Html.EditorFor(model => model.FromDate, new { htmlAttributes = new { @class = "form-control", @placeholder = "Select From Date" } })
                                                @Html.ValidationMessageFor(model => model.FromDate, "", new { @class = "error" })
                                                <label id="FromDate-error" class="error" for="FromDate" style="display:none;"></label>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <label class="form-control-label">To Date</label>
                                                @Html.EditorFor(model => model.ToDate, new { htmlAttributes = new { @class = "form-control", @placeholder = "Select To Date" } })
                                                @Html.ValidationMessageFor(model => model.ToDate, "", new { @class = "error" })
                                                <label id="ToDate-error" class="error" for="ToDate" style="display:none;"></label>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <label class="form-control-label">Exam Time</label>
                                                @Html.EditorFor(model => model.ExamTime, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Exam Time" } })
                                                @Html.ValidationMessageFor(model => model.ExamTime, "", new { @class = "error" })
                                                <label id="ExamTime-error" class="error" for="ExamTime" style="display:none;"></label>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <label class="form-control-label">Total Mark</label>
                                                @Html.EditorFor(model => model.TotalMark, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Total Mark" } })
                                                @Html.ValidationMessageFor(model => model.TotalMark, "", new { @class = "error" })
                                                <label id="TotalMark-error" class="error" for="TotalMark" style="display:none;"></label>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row align-items-center">
                                        <div class="col-md-12">
                                            <div class="form-group">
                                                <label class="form-control-label">Questions</label>
                                                <div>
                                                    <div class="custom-control custom-radio custom-control-inline">
                                                        <input type="radio" id="customRadioInline1" name="customRadioInline1" class="custom-control-input">
                                                        <label class="custom-control-label" for="customRadioInline1">Select From Question Bank</label>
                                                    </div>
                                                    <div class="custom-control custom-radio custom-control-inline">
                                                        <input type="radio" id="customRadioInline2" name="customRadioInline1" class="custom-control-input">
                                                        <label class="custom-control-label" for="customRadioInline2">Select Manually</label>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row align-items-center">
                                        <div class="col-md-12">
                                            <div class="card">
                                                <div class="card-body">
                                                    <div class="py-3 table-responsive">
                                                        <table id="fromDtpQsBank" class="table table-bordered dataTable no-footer" role="grid" aria-describedby="theadres_info">
                                                            <thead>
                                                                <tr role="row">
                                                                    <th class="sorting" tabindex="0" aria-controls="theadres" rowspan="1" colspan="1" style="width: 0px;">Sl.No</th>
                                                                    <th class="sorting" tabindex="0" aria-controls="theadres" rowspan="1" colspan="1" style="max-width: 500px;">Questions</th>
                                                                    <th class="sorting" tabindex="0" aria-controls="theadres" rowspan="1" colspan="1" style="width: 0px;">Ans</th>
                                                                    <th class="sorting" tabindex="0" aria-controls="theadres" rowspan="1" colspan="1" style="width: 0px;">Mark</th>
                                                                </tr>
                                                            </thead>
                                                            <tbody id="fromDtpQsBank_body">
                                                            </tbody>
                                                        </table>
                                                    </div>
                                                </div>
                                                <div class="card-footer">
                                                    <div class="text-right">
                                                      
                                                            <input class="btn btn-sm btn-warning" type="button" id="Confirm" value="Confirm" />
                                                    </div>
                                                </div>
                                            </div>                                            
                                        </div>
                                    </div>

                                    <div class="mt-3 text-right">
                                        <a href="Exams" class="btn btn-sm btn-secondary">Cancel</a>
                                        <button type="submit" class="btn btn-sm btn-primary">Save</button>
                                    </div>
                                </form>
                            </div>



                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script>
        jQuery(document).ready(function () {

            $("#ClassID").change(function () {
                var id = $(this).find(":selected").val()
                var selectid = { "id": id }

                $.ajax({
                    url: "GetCourseWiseClass",
                    data: JSON.stringify(selectid),
                    type: 'POST',
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {
                        $("#CourseID").empty();
                        $("#CourseID").append('<option value="">Select Course</option>');

                        $.each(data, function (i) {
                            var optionhtml = '<option value="' +
                                data[i].Value + '">' + data[i].Text + '</option>';
                            $("#CourseID").append(optionhtml);
                        });
                    }
                });

            });

            $("#SubjectID").change(function () {
                var id = $(this).find(":selected").val()
                var selectid = { "id": id }

                $.ajax({
                    url: "GetGroup",
                    data: JSON.stringify(selectid),
                    type: 'POST',
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {
                        $("#Group").empty();
                        $("#Group").append('<option value="">Select Group</option>');

                        $.each(data, function (i) {
                            var optionhtml = '<option value="' +
                                data[i].Value + '">' + data[i].Text + '</option>';
                            $("#Group").append(optionhtml);
                        });
                    }
                });

            });



            $("#customRadioInline1").change(function () {

                $("#Confirm").show();
                $('#assets-data-table').show();
                $('#selectedqns').hide();
                $('#IsDataQn').hide;

                $('#IsDataQn').val(1);


                var par = {
                    pgmId: $("#ProgramID").find(":selected").val(),
                    courseId: $("#CourseID").find(":selected").val(),
                    subjectId: $("#SubjectID").find(":selected").val()
                };


                $.ajax({
                    url: "GetQnFromQnBank",
                    data: JSON.stringify(par),
                    type: 'POST',
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {

                        $('#assets-data-table tbody').empty();
                        var table = $("#fromDtpQsBank_body");
                        $.each(data, function (i) {

                            var chk = "<input type='checkbox' id='chk_" + data[i].Id + "' />";

                            if (data[i].Photo == null)
                            {
                                table.append("<tr><td>" + data[i].Id + "</td><td style='max-width:500px;'>" + data[i].Questions + "</td><td>" + data[i].Mark + "</td><td>" + chk + "</td></tr>");
                            }
                            else
                            {
                                var path = data[i].Photo;
                                var img = "<img style='max-width:700px;' src= "+ path +" />";
                                table.append("<tr><td>" + data[i].Id + "</td><td style='max-width:500px;'>" + img + "</td><td>" + data[i].Mark + "</td><td>" + chk + "</td></tr>");
                            }
                        });


                    }
                });
            });
        });
    </script>
}